(defun melhor-populacao (estado)
"melhor-populacao: lista --> lista de melhores pecas"
(let (media-caso nil)
(setf estado-aux (copia-estado estado))
(dotimes (n (list-length (estado-pecas-por-colocar estado)))
	(cond ((equal (first (estado-pecas-por-colocar estado-aux) 'i))      (+ caso-media (/ 800 2)))
          ((or (equal (first (estado-pecas-por-colocar estado-aux) 'j))
               (equal (first (estado-pecas-por-colocar estado-aux) 'l))) (+ caso-media (/ 500 4)))
          ((or (equal (first (estado-pecas-por-colocar estado-aux) 's))
               (equal (first (estado-pecas-por-colocar estado-aux) 'z))) (+ caso-media (/ 300 2)))
          ((equal (first (estado-pecas-por-colocarestado-aux) 't))      (+ caso-media (/ 300 4)))
          ((equal (first (estado-pecas-por-colocar estado-aux) 'o))      (+ caso-media (/ 300 1)))
          (setf (estado-pecas-por-colocar estado-aux) (rest pecas-por-colocar))))
(setf media-caso (/ media-caso (list-length (estado-pecas-por-colocar estado))))
(lista-melhores estado media-caso)))

(defun lista-melhores (estado media)
"lista-melhores: estadoXmedia-->lista"
(let (melhores nil) (numero-da-lista (* 0.3 (list-length (estado-pecas-por-colocar estado)))) (melhores-aux nil)
(dotimes (n (list-length (estado-pecas-por-colocar estado)))
	(cond ((equal (first (estado-pecas-por-colocar estado) 'i))
			(cond ((> (/ 800 2) media) (append melhores-aux 'i))))
          ((equal (first (estado-pecas-por-colocar estado) 'j))
			(cond ((> (/ 500 4) media) (append melhores-aux 'j))))
          ((equal (first (estado-pecas-por-colocar estado) 'l)) 
			(cond ((> (/ 500 4) media) (append melhores-aux 'j))))
          ((equal (first (estado-pecas-por-colocar estado) 's))
			(cond ((> (/ 300 2) media) (append melhores-aux 's))))
		  ((equal (first (estado-pecas-por-colocar estado) 'z))
			(cond ((> (/ 300 2) media) (append melhores-aux 'z))))
          ((equal (first (estado-pecas-por-colocar estado) 't))
			(cond ((> (/ 300 4) media) (append melhores-aux 't))))
          ((equal (first (estado-pecas-por-colocar estado) 'o)) 
			(cond ((> (/ 300 4) media) (append melhores-aux 'o))))))
(cond ((< (list-length melhores_aux) numero-da-lista) (lista-melhores estado (- media 50)))
	  ((> (list-length melhores_aux) numero-da-lista) 
		(dotimes (n numero-da-lista)
			(append melhores (first melhores-aux))
			(setf melhores-aux (rest melhores-aux)))
		melhores)
	   (melhores-aux))))


